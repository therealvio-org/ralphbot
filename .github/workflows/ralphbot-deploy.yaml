# yaml-language server: $schema=https://json.schemastore.org/github-action.json

name: Deploy
on:
  workflow_run:
    workflows:
      - Ralphbot Infra Stack Linting & Testing
      - Ralphbot Bot Source Code Linting
    branches:
      - main
    types:
      - completed

env:
  COMMIT: ${GITHUB_SHA}
  CDK_IMAGE_NAMETAG: cdk-ralphbot
  APP_IMAGE_NAMETAG: ralphbot
  REPOSITORY: ralphbot/master
  ENVIRONMENT: production-global

jobs:
  #Publish CDK Stack Container Image
  cdk-publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        working-directory: ./ops/
    environment: production-global
    name: ralphbot-cdk-stack-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set IMAGE_TAG env
        run: |
          echo "IMAGE_TAG="cdk-$(date '+%Y.%m.%d'.${GITHUB_SHA::6})"" >> $GITHUB_ENV

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: "Login to Amazon Public ECR"
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: "Build Ralphbot CDK Stack Container Image"
        run: |
          docker build --tag ${{ env.CDK_IMAGE_NAMETAG }}:$IMAGE_TAG .

      - name: "Configure AWS Credentials - Change Region to Deployment Region"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to Ralphbot ECR"
        id: login-ralphbot-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "Push Ralphbot CDK Stack Image to Ralphbot ECR"
        env:
          REGISTRY: ${{ steps.login-ralphbot-ecr.outputs.registry }}
        run: |
          docker tag ${{ env.CDK_IMAGE_NAMETAG }}:$IMAGE_TAG $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG
          docker push $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG

  #Build and Publish Ralphbot Container Image
  ralphbot-publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        working-directory: ./src/
    environment: production-global
    name: ralphbot-container-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set IMAGE_TAG env
        run: |
          echo "IMAGE_TAG="$(date '+%Y.%m.%d'.${GITHUB_SHA::6})"" >> $GITHUB_ENV

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: "Login to Amazon Public ECR"
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: "Build Ralphbot Container Image"
        run: |
          docker build --build-arg MAKE_TARGET=build-deployment-binary --tag ${{ env.APP_IMAGE_NAMETAG }}:$IMAGE_TAG .

      - name: "Configure AWS Credentials - Change Region to Deployment Region"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to Ralphbot ECR"
        id: login-ralphbot-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "Push Ralphbot Container Image to Ralphbot ECR"
        env:
          REGISTRY: ${{ steps.login-ralphbot-ecr.outputs.registry }}
        run: |
          docker tag ${{ env.APP_IMAGE_NAMETAG }}:$IMAGE_TAG $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG
          docker push $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG

  #Deploy CDK Stack
  cdk-deploy:
    environment: production-global
    name: ralphbot-cdk-stack-deploy
    needs:
      - cdk-publish
      - ralphbot-publish
    runs-on: ubuntu-latest
    steps:
      - name: Set Job envs
        run: |
          echo "VERSION=$(date '+%Y.%m.%d'.${GITHUB_SHA::6})" >> $GITHUB_ENV
          echo "IMAGE_TAG="cdk-$(date '+%Y.%m.%d'.${GITHUB_SHA::6})"" >> $GITHUB_ENV

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to Ralphbot ECR"
        id: login-ralphbot-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "Pull Ralphbot CDK App Image from Ralphbot ECR"
        id: pull-image
        env:
          REGISTRY: ${{ steps.login-ralphbot-ecr.outputs.registry }}
        run: |
          docker pull $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG
          echo "cdk-image="$REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG"" >> $GITHUB_OUTPUT

      - name: "Run CDK Deploy"
        run: |
          docker run -i \
          -e VERSION \
          -e ENVIRONMENT \
          -e COMMIT \
          -e AWS_ACCESS_KEY_ID \
          -e AWS_SECRET_ACCESS_KEY \
          -e AWS_REGION=${{ secrets.AWS_REGION }} \
          -e AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }} \
          -e AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}  \
          ${{ steps.pull-image.outputs.cdk-image }} \
          ci-deploy
